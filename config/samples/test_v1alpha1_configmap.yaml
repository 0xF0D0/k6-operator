apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-test
data:
  test.js: |
    import http from 'k6/http';

    import { Rate } from 'k6/metrics';
    import { check, sleep } from 'k6';

    const failRate = new Rate('failed_requests');

    function getExecutionSegment() {
      const n = __ENV.K6_NODES_INDEX;
      const s = __ENV.K6_NODES_TOTAL;

      let sequence = [];
      for (let i=0; i <= s; i++) {
        sequence.push(`${i}/${s}`);
      }

      let output = {
        executionSegment: `${n-1}/${s}:${n}/${s}`,
        executionSegmentSequence: sequence.join(','),
      }

      console.log(JSON.stringify(output, null, 2));
      return output;
    }


    const segment = getExecutionSegment();
    export const options = {
      executionSegment: segment.executionSegment,
      executionSegmentSequence: segment.executionSegmentSequence,
      stages: [
            { target: 200, duration: '30s' },
            { target: 0, duration: '30s' },
      ],
      threshold: {
        failed_requests: ['rate<=0'],
        http_req_duration: ['p(95)<500'],
      },
    };

    export default function () {
      console.log(__VU);
      const result = http.get('https://test-api.k6.io/public/crocodiles/');
      check(result, {
        'http response status code is 200': result.status === 200,
      });
      failRate.add(result.status !== 200);
      sleep(1);
    }